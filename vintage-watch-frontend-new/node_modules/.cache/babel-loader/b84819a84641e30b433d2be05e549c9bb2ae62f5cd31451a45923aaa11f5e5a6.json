{"ast":null,"code":"var _jsxFileName = \"D:\\\\begin\\\\BRUHMAJOR\\\\EDUCATION\\\\SOFTWARE\\\\SOFTWARE_GROUP\\\\vintage-watch-frontend-new\\\\src\\\\components\\\\Support\\\\LiveChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LiveChatContainer = styled.div`\n  max-width: 100%;\n  height: 600px;\n  display: flex;\n  flex-direction: column;\n`;\n_c = LiveChatContainer;\nconst ChatHeader = styled.div`\n  background: linear-gradient(135deg, #e67e22 0%, #d35400 100%);\n  color: white;\n  padding: 1rem;\n  border-radius: 8px 8px 0 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n_c2 = ChatHeader;\nconst ChatTitle = styled.h3`\n  margin: 0;\n  font-size: 1.1rem;\n`;\n_c3 = ChatTitle;\nconst OnlineStatus = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 0.9rem;\n`;\n_c4 = OnlineStatus;\nconst StatusDot = styled.div`\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background-color: #27ae60;\n  animation: pulse 2s infinite;\n  \n  @keyframes pulse {\n    0% { opacity: 1; }\n    50% { opacity: 0.5; }\n    100% { opacity: 1; }\n  }\n`;\n_c5 = StatusDot;\nconst ChatArea = styled.div`\n  flex: 1;\n  background: white;\n  border: 1px solid #e1e8ed;\n  border-top: none;\n  padding: 1rem;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n_c6 = ChatArea;\nconst Message = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: ${props => props.isAgent ? 'flex-end' : 'flex-start'};\n`;\n_c7 = Message;\nconst MessageBubble = styled.div`\n  max-width: 70%;\n  padding: 0.75rem 1rem;\n  border-radius: 18px;\n  background-color: ${props => props.isAgent ? '#e67e22' : '#f1f3f4'};\n  color: ${props => props.isAgent ? 'white' : '#2c3e50'};\n  font-size: 0.9rem;\n  line-height: 1.4;\n`;\n_c8 = MessageBubble;\nconst MessageTime = styled.span`\n  font-size: 0.7rem;\n  color: #7f8c8d;\n  margin-top: 0.25rem;\n  padding: 0 0.5rem;\n`;\n_c9 = MessageTime;\nconst MessageSender = styled.span`\n  font-size: 0.7rem;\n  color: #7f8c8d;\n  margin-bottom: 0.25rem;\n  padding: 0 0.5rem;\n  font-weight: 500;\n`;\n_c0 = MessageSender;\nconst ChatInput = styled.div`\n  background: white;\n  border: 1px solid #e1e8ed;\n  border-top: none;\n  border-radius: 0 0 8px 8px;\n  padding: 1rem;\n  display: flex;\n  gap: 0.5rem;\n`;\n_c1 = ChatInput;\nconst Input = styled.input`\n  flex: 1;\n  padding: 0.75rem;\n  border: 1px solid #e1e8ed;\n  border-radius: 20px;\n  font-size: 0.9rem;\n  \n  &:focus {\n    outline: none;\n    border-color: #e67e22;\n  }\n`;\n_c10 = Input;\nconst SendButton = styled.button`\n  background: #e67e22;\n  color: white;\n  border: none;\n  padding: 0.75rem 1.5rem;\n  border-radius: 20px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n  \n  &:hover {\n    background: #d35400;\n  }\n  \n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n`;\n_c11 = SendButton;\nconst ActiveChats = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 1rem;\n  margin-bottom: 2rem;\n`;\n_c12 = ActiveChats;\nconst ChatCard = styled.div`\n  background: white;\n  border: 1px solid #e1e8ed;\n  border-radius: 8px;\n  padding: 1rem;\n  cursor: pointer;\n  transition: box-shadow 0.2s ease;\n  \n  &:hover {\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  }\n`;\n_c13 = ChatCard;\nconst ChatCardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 0.5rem;\n`;\n_c14 = ChatCardHeader;\nconst CustomerName = styled.h4`\n  margin: 0;\n  color: #2c3e50;\n  font-size: 1rem;\n`;\n_c15 = CustomerName;\nconst UnreadCount = styled.div`\n  background: #e74c3c;\n  color: white;\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.7rem;\n  font-weight: 600;\n`;\n_c16 = UnreadCount;\nconst LastMessage = styled.p`\n  margin: 0;\n  color: #7f8c8d;\n  font-size: 0.8rem;\n  line-height: 1.4;\n`;\n_c17 = LastMessage;\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 3rem;\n  color: #7f8c8d;\n  \n  h3 {\n    margin-bottom: 1rem;\n    color: #2c3e50;\n  }\n`;\n_c18 = EmptyState;\nconst LiveChat = () => {\n  _s();\n  const [activeChat, setActiveChat] = useState(null);\n  const [message, setMessage] = useState('');\n  const [chats] = useState([{\n    id: 1,\n    customerName: 'John Smith',\n    customerId: 123,\n    lastMessage: 'Hi, I have a question about my order...',\n    unreadCount: 2,\n    messages: [{\n      id: 1,\n      text: 'Hi, I have a question about my order #1234',\n      isAgent: false,\n      timestamp: '2024-01-15T10:30:00Z',\n      sender: 'John Smith'\n    }, {\n      id: 2,\n      text: 'Hello John! I\\'d be happy to help you with your order. What specific question do you have?',\n      isAgent: true,\n      timestamp: '2024-01-15T10:32:00Z',\n      sender: 'Support Agent'\n    }, {\n      id: 3,\n      text: 'I was wondering about the shipping status. It says it should have arrived by now.',\n      isAgent: false,\n      timestamp: '2024-01-15T10:35:00Z',\n      sender: 'John Smith'\n    }]\n  }, {\n    id: 2,\n    customerName: 'Sarah Johnson',\n    customerId: 456,\n    lastMessage: 'Thank you for your help!',\n    unreadCount: 0,\n    messages: [{\n      id: 1,\n      text: 'Thank you for your help!',\n      isAgent: false,\n      timestamp: '2024-01-15T09:45:00Z',\n      sender: 'Sarah Johnson'\n    }]\n  }, {\n    id: 3,\n    customerName: 'Mike Wilson',\n    customerId: 789,\n    lastMessage: 'Is this watch authentic?',\n    unreadCount: 1,\n    messages: [{\n      id: 1,\n      text: 'Is this watch authentic? I want to make sure before purchasing.',\n      isAgent: false,\n      timestamp: '2024-01-15T11:15:00Z',\n      sender: 'Mike Wilson'\n    }]\n  }]);\n  const handleSendMessage = () => {\n    if (!message.trim() || !activeChat) return;\n    const newMessage = {\n      id: Date.now(),\n      text: message,\n      isAgent: true,\n      timestamp: new Date().toISOString(),\n      sender: 'Support Agent'\n    };\n\n    // In a real application, this would send the message to the backend\n    toast.success('Message sent!');\n    setMessage('');\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n  const formatTime = timestamp => {\n    return new Date(timestamp).toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(LiveChatContainer, {\n    children: !activeChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: '#2c3e50',\n          marginBottom: '1rem'\n        },\n        children: \"Active Chat Sessions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ActiveChats, {\n        children: chats.map(chat => /*#__PURE__*/_jsxDEV(ChatCard, {\n          onClick: () => setActiveChat(chat),\n          children: [/*#__PURE__*/_jsxDEV(ChatCardHeader, {\n            children: [/*#__PURE__*/_jsxDEV(CustomerName, {\n              children: chat.customerName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 19\n            }, this), chat.unreadCount > 0 && /*#__PURE__*/_jsxDEV(UnreadCount, {\n              children: chat.unreadCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(LastMessage, {\n            children: chat.lastMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 17\n          }, this)]\n        }, chat.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this), chats.length === 0 && /*#__PURE__*/_jsxDEV(EmptyState, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No active chat sessions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No customers are currently waiting for support.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n        children: [/*#__PURE__*/_jsxDEV(ChatTitle, {\n          children: [\"Chat with \", activeChat.customerName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(OnlineStatus, {\n          children: [/*#__PURE__*/_jsxDEV(StatusDot, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this), \"Online\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ChatArea, {\n        children: activeChat.messages.map(msg => /*#__PURE__*/_jsxDEV(Message, {\n          isAgent: msg.isAgent,\n          children: [!msg.isAgent && /*#__PURE__*/_jsxDEV(MessageSender, {\n            children: msg.sender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(MessageBubble, {\n            isAgent: msg.isAgent,\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(MessageTime, {\n            children: formatTime(msg.timestamp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 17\n          }, this)]\n        }, msg.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          placeholder: \"Type your message...\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          onKeyPress: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SendButton, {\n          onClick: handleSendMessage,\n          disabled: !message.trim(),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '1rem',\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setActiveChat(null),\n          style: {\n            background: '#95a5a6',\n            color: 'white',\n            border: 'none',\n            padding: '8px 16px',\n            borderRadius: '6px',\n            cursor: 'pointer'\n          },\n          children: \"Back to Chat List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 296,\n    columnNumber: 5\n  }, this);\n};\n_s(LiveChat, \"rowgmVNVemNSg9ccnIOaDHBEjuA=\");\n_c19 = LiveChat;\nexport default LiveChat;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19;\n$RefreshReg$(_c, \"LiveChatContainer\");\n$RefreshReg$(_c2, \"ChatHeader\");\n$RefreshReg$(_c3, \"ChatTitle\");\n$RefreshReg$(_c4, \"OnlineStatus\");\n$RefreshReg$(_c5, \"StatusDot\");\n$RefreshReg$(_c6, \"ChatArea\");\n$RefreshReg$(_c7, \"Message\");\n$RefreshReg$(_c8, \"MessageBubble\");\n$RefreshReg$(_c9, \"MessageTime\");\n$RefreshReg$(_c0, \"MessageSender\");\n$RefreshReg$(_c1, \"ChatInput\");\n$RefreshReg$(_c10, \"Input\");\n$RefreshReg$(_c11, \"SendButton\");\n$RefreshReg$(_c12, \"ActiveChats\");\n$RefreshReg$(_c13, \"ChatCard\");\n$RefreshReg$(_c14, \"ChatCardHeader\");\n$RefreshReg$(_c15, \"CustomerName\");\n$RefreshReg$(_c16, \"UnreadCount\");\n$RefreshReg$(_c17, \"LastMessage\");\n$RefreshReg$(_c18, \"EmptyState\");\n$RefreshReg$(_c19, \"LiveChat\");","map":{"version":3,"names":["React","useState","toast","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","LiveChatContainer","div","_c","ChatHeader","_c2","ChatTitle","h3","_c3","OnlineStatus","_c4","StatusDot","_c5","ChatArea","_c6","Message","props","isAgent","_c7","MessageBubble","_c8","MessageTime","span","_c9","MessageSender","_c0","ChatInput","_c1","Input","input","_c10","SendButton","button","_c11","ActiveChats","_c12","ChatCard","_c13","ChatCardHeader","_c14","CustomerName","h4","_c15","UnreadCount","_c16","LastMessage","p","_c17","EmptyState","_c18","LiveChat","_s","activeChat","setActiveChat","message","setMessage","chats","id","customerName","customerId","lastMessage","unreadCount","messages","text","timestamp","sender","handleSendMessage","trim","newMessage","Date","now","toISOString","success","handleKeyPress","e","key","formatTime","toLocaleTimeString","hour","minute","children","style","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","chat","onClick","length","msg","type","placeholder","value","onChange","target","onKeyPress","disabled","marginTop","textAlign","background","border","padding","borderRadius","cursor","_c19","$RefreshReg$"],"sources":["D:/begin/BRUHMAJOR/EDUCATION/SOFTWARE/SOFTWARE_GROUP/vintage-watch-frontend-new/src/components/Support/LiveChat.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport styled from 'styled-components';\r\n\r\nconst LiveChatContainer = styled.div`\r\n  max-width: 100%;\r\n  height: 600px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ChatHeader = styled.div`\r\n  background: linear-gradient(135deg, #e67e22 0%, #d35400 100%);\r\n  color: white;\r\n  padding: 1rem;\r\n  border-radius: 8px 8px 0 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst ChatTitle = styled.h3`\r\n  margin: 0;\r\n  font-size: 1.1rem;\r\n`;\r\n\r\nconst OnlineStatus = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst StatusDot = styled.div`\r\n  width: 8px;\r\n  height: 8px;\r\n  border-radius: 50%;\r\n  background-color: #27ae60;\r\n  animation: pulse 2s infinite;\r\n  \r\n  @keyframes pulse {\r\n    0% { opacity: 1; }\r\n    50% { opacity: 0.5; }\r\n    100% { opacity: 1; }\r\n  }\r\n`;\r\n\r\nconst ChatArea = styled.div`\r\n  flex: 1;\r\n  background: white;\r\n  border: 1px solid #e1e8ed;\r\n  border-top: none;\r\n  padding: 1rem;\r\n  overflow-y: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n`;\r\n\r\nconst Message = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: ${props => props.isAgent ? 'flex-end' : 'flex-start'};\r\n`;\r\n\r\nconst MessageBubble = styled.div`\r\n  max-width: 70%;\r\n  padding: 0.75rem 1rem;\r\n  border-radius: 18px;\r\n  background-color: ${props => props.isAgent ? '#e67e22' : '#f1f3f4'};\r\n  color: ${props => props.isAgent ? 'white' : '#2c3e50'};\r\n  font-size: 0.9rem;\r\n  line-height: 1.4;\r\n`;\r\n\r\nconst MessageTime = styled.span`\r\n  font-size: 0.7rem;\r\n  color: #7f8c8d;\r\n  margin-top: 0.25rem;\r\n  padding: 0 0.5rem;\r\n`;\r\n\r\nconst MessageSender = styled.span`\r\n  font-size: 0.7rem;\r\n  color: #7f8c8d;\r\n  margin-bottom: 0.25rem;\r\n  padding: 0 0.5rem;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst ChatInput = styled.div`\r\n  background: white;\r\n  border: 1px solid #e1e8ed;\r\n  border-top: none;\r\n  border-radius: 0 0 8px 8px;\r\n  padding: 1rem;\r\n  display: flex;\r\n  gap: 0.5rem;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  flex: 1;\r\n  padding: 0.75rem;\r\n  border: 1px solid #e1e8ed;\r\n  border-radius: 20px;\r\n  font-size: 0.9rem;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    border-color: #e67e22;\r\n  }\r\n`;\r\n\r\nconst SendButton = styled.button`\r\n  background: #e67e22;\r\n  color: white;\r\n  border: none;\r\n  padding: 0.75rem 1.5rem;\r\n  border-radius: 20px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s ease;\r\n  \r\n  &:hover {\r\n    background: #d35400;\r\n  }\r\n  \r\n  &:disabled {\r\n    opacity: 0.6;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst ActiveChats = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n  gap: 1rem;\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nconst ChatCard = styled.div`\r\n  background: white;\r\n  border: 1px solid #e1e8ed;\r\n  border-radius: 8px;\r\n  padding: 1rem;\r\n  cursor: pointer;\r\n  transition: box-shadow 0.2s ease;\r\n  \r\n  &:hover {\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n  }\r\n`;\r\n\r\nconst ChatCardHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nconst CustomerName = styled.h4`\r\n  margin: 0;\r\n  color: #2c3e50;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst UnreadCount = styled.div`\r\n  background: #e74c3c;\r\n  color: white;\r\n  border-radius: 50%;\r\n  width: 20px;\r\n  height: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 0.7rem;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst LastMessage = styled.p`\r\n  margin: 0;\r\n  color: #7f8c8d;\r\n  font-size: 0.8rem;\r\n  line-height: 1.4;\r\n`;\r\n\r\nconst EmptyState = styled.div`\r\n  text-align: center;\r\n  padding: 3rem;\r\n  color: #7f8c8d;\r\n  \r\n  h3 {\r\n    margin-bottom: 1rem;\r\n    color: #2c3e50;\r\n  }\r\n`;\r\n\r\nconst LiveChat = () => {\r\n  const [activeChat, setActiveChat] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n  const [chats] = useState([\r\n    {\r\n      id: 1,\r\n      customerName: 'John Smith',\r\n      customerId: 123,\r\n      lastMessage: 'Hi, I have a question about my order...',\r\n      unreadCount: 2,\r\n      messages: [\r\n        {\r\n          id: 1,\r\n          text: 'Hi, I have a question about my order #1234',\r\n          isAgent: false,\r\n          timestamp: '2024-01-15T10:30:00Z',\r\n          sender: 'John Smith'\r\n        },\r\n        {\r\n          id: 2,\r\n          text: 'Hello John! I\\'d be happy to help you with your order. What specific question do you have?',\r\n          isAgent: true,\r\n          timestamp: '2024-01-15T10:32:00Z',\r\n          sender: 'Support Agent'\r\n        },\r\n        {\r\n          id: 3,\r\n          text: 'I was wondering about the shipping status. It says it should have arrived by now.',\r\n          isAgent: false,\r\n          timestamp: '2024-01-15T10:35:00Z',\r\n          sender: 'John Smith'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 2,\r\n      customerName: 'Sarah Johnson',\r\n      customerId: 456,\r\n      lastMessage: 'Thank you for your help!',\r\n      unreadCount: 0,\r\n      messages: [\r\n        {\r\n          id: 1,\r\n          text: 'Thank you for your help!',\r\n          isAgent: false,\r\n          timestamp: '2024-01-15T09:45:00Z',\r\n          sender: 'Sarah Johnson'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 3,\r\n      customerName: 'Mike Wilson',\r\n      customerId: 789,\r\n      lastMessage: 'Is this watch authentic?',\r\n      unreadCount: 1,\r\n      messages: [\r\n        {\r\n          id: 1,\r\n          text: 'Is this watch authentic? I want to make sure before purchasing.',\r\n          isAgent: false,\r\n          timestamp: '2024-01-15T11:15:00Z',\r\n          sender: 'Mike Wilson'\r\n        }\r\n      ]\r\n    }\r\n  ]);\r\n\r\n  const handleSendMessage = () => {\r\n    if (!message.trim() || !activeChat) return;\r\n\r\n    const newMessage = {\r\n      id: Date.now(),\r\n      text: message,\r\n      isAgent: true,\r\n      timestamp: new Date().toISOString(),\r\n      sender: 'Support Agent'\r\n    };\r\n\r\n    // In a real application, this would send the message to the backend\r\n    toast.success('Message sent!');\r\n    setMessage('');\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  const formatTime = (timestamp) => {\r\n    return new Date(timestamp).toLocaleTimeString('en-US', {\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  return (\r\n    <LiveChatContainer>\r\n      {!activeChat ? (\r\n        <>\r\n          <h3 style={{ color: '#2c3e50', marginBottom: '1rem' }}>Active Chat Sessions</h3>\r\n          <ActiveChats>\r\n            {chats.map(chat => (\r\n              <ChatCard key={chat.id} onClick={() => setActiveChat(chat)}>\r\n                <ChatCardHeader>\r\n                  <CustomerName>{chat.customerName}</CustomerName>\r\n                  {chat.unreadCount > 0 && (\r\n                    <UnreadCount>{chat.unreadCount}</UnreadCount>\r\n                  )}\r\n                </ChatCardHeader>\r\n                <LastMessage>{chat.lastMessage}</LastMessage>\r\n              </ChatCard>\r\n            ))}\r\n          </ActiveChats>\r\n          \r\n          {chats.length === 0 && (\r\n            <EmptyState>\r\n              <h3>No active chat sessions</h3>\r\n              <p>No customers are currently waiting for support.</p>\r\n            </EmptyState>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <ChatHeader>\r\n            <ChatTitle>Chat with {activeChat.customerName}</ChatTitle>\r\n            <OnlineStatus>\r\n              <StatusDot />\r\n              Online\r\n            </OnlineStatus>\r\n          </ChatHeader>\r\n          \r\n          <ChatArea>\r\n            {activeChat.messages.map(msg => (\r\n              <Message key={msg.id} isAgent={msg.isAgent}>\r\n                {!msg.isAgent && <MessageSender>{msg.sender}</MessageSender>}\r\n                <MessageBubble isAgent={msg.isAgent}>\r\n                  {msg.text}\r\n                </MessageBubble>\r\n                <MessageTime>{formatTime(msg.timestamp)}</MessageTime>\r\n              </Message>\r\n            ))}\r\n          </ChatArea>\r\n          \r\n          <ChatInput>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"Type your message...\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n            />\r\n            <SendButton onClick={handleSendMessage} disabled={!message.trim()}>\r\n              Send\r\n            </SendButton>\r\n          </ChatInput>\r\n          \r\n          <div style={{ marginTop: '1rem', textAlign: 'center' }}>\r\n            <button\r\n              onClick={() => setActiveChat(null)}\r\n              style={{\r\n                background: '#95a5a6',\r\n                color: 'white',\r\n                border: 'none',\r\n                padding: '8px 16px',\r\n                borderRadius: '6px',\r\n                cursor: 'pointer'\r\n              }}\r\n            >\r\n              Back to Chat List\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </LiveChatContainer>\r\n  );\r\n};\r\n\r\nexport default LiveChat;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,iBAAiB,GAAGL,MAAM,CAACM,GAAG;AACpC;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GALIF,iBAAiB;AAOvB,MAAMG,UAAU,GAAGR,MAAM,CAACM,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GARID,UAAU;AAUhB,MAAME,SAAS,GAAGV,MAAM,CAACW,EAAE;AAC3B;AACA;AACA,CAAC;AAACC,GAAA,GAHIF,SAAS;AAKf,MAAMG,YAAY,GAAGb,MAAM,CAACM,GAAG;AAC/B;AACA;AACA;AACA;AACA,CAAC;AAACQ,GAAA,GALID,YAAY;AAOlB,MAAME,SAAS,GAAGf,MAAM,CAACM,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACU,GAAA,GAZID,SAAS;AAcf,MAAME,QAAQ,GAAGjB,MAAM,CAACM,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACY,GAAA,GAVID,QAAQ;AAYd,MAAME,OAAO,GAAGnB,MAAM,CAACM,GAAG;AAC1B;AACA;AACA,iBAAiBc,KAAK,IAAIA,KAAK,CAACC,OAAO,GAAG,UAAU,GAAG,YAAY;AACnE,CAAC;AAACC,GAAA,GAJIH,OAAO;AAMb,MAAMI,aAAa,GAAGvB,MAAM,CAACM,GAAG;AAChC;AACA;AACA;AACA,sBAAsBc,KAAK,IAAIA,KAAK,CAACC,OAAO,GAAG,SAAS,GAAG,SAAS;AACpE,WAAWD,KAAK,IAAIA,KAAK,CAACC,OAAO,GAAG,OAAO,GAAG,SAAS;AACvD;AACA;AACA,CAAC;AAACG,GAAA,GARID,aAAa;AAUnB,MAAME,WAAW,GAAGzB,MAAM,CAAC0B,IAAI;AAC/B;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GALIF,WAAW;AAOjB,MAAMG,aAAa,GAAG5B,MAAM,CAAC0B,IAAI;AACjC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GANID,aAAa;AAQnB,MAAME,SAAS,GAAG9B,MAAM,CAACM,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACyB,GAAA,GARID,SAAS;AAUf,MAAME,KAAK,GAAGhC,MAAM,CAACiC,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GAXIF,KAAK;AAaX,MAAMG,UAAU,GAAGnC,MAAM,CAACoC,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GAlBIF,UAAU;AAoBhB,MAAMG,WAAW,GAAGtC,MAAM,CAACM,GAAG;AAC9B;AACA;AACA;AACA;AACA,CAAC;AAACiC,IAAA,GALID,WAAW;AAOjB,MAAME,QAAQ,GAAGxC,MAAM,CAACM,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACmC,IAAA,GAXID,QAAQ;AAad,MAAME,cAAc,GAAG1C,MAAM,CAACM,GAAG;AACjC;AACA;AACA;AACA;AACA,CAAC;AAACqC,IAAA,GALID,cAAc;AAOpB,MAAME,YAAY,GAAG5C,MAAM,CAAC6C,EAAE;AAC9B;AACA;AACA;AACA,CAAC;AAACC,IAAA,GAJIF,YAAY;AAMlB,MAAMG,WAAW,GAAG/C,MAAM,CAACM,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC0C,IAAA,GAXID,WAAW;AAajB,MAAME,WAAW,GAAGjD,MAAM,CAACkD,CAAC;AAC5B;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GALIF,WAAW;AAOjB,MAAMG,UAAU,GAAGpD,MAAM,CAACM,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC+C,IAAA,GATID,UAAU;AAWhB,MAAME,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAG3D,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAAC4D,OAAO,EAAEC,UAAU,CAAC,GAAG7D,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC8D,KAAK,CAAC,GAAG9D,QAAQ,CAAC,CACvB;IACE+D,EAAE,EAAE,CAAC;IACLC,YAAY,EAAE,YAAY;IAC1BC,UAAU,EAAE,GAAG;IACfC,WAAW,EAAE,yCAAyC;IACtDC,WAAW,EAAE,CAAC;IACdC,QAAQ,EAAE,CACR;MACEL,EAAE,EAAE,CAAC;MACLM,IAAI,EAAE,4CAA4C;MAClD9C,OAAO,EAAE,KAAK;MACd+C,SAAS,EAAE,sBAAsB;MACjCC,MAAM,EAAE;IACV,CAAC,EACD;MACER,EAAE,EAAE,CAAC;MACLM,IAAI,EAAE,4FAA4F;MAClG9C,OAAO,EAAE,IAAI;MACb+C,SAAS,EAAE,sBAAsB;MACjCC,MAAM,EAAE;IACV,CAAC,EACD;MACER,EAAE,EAAE,CAAC;MACLM,IAAI,EAAE,mFAAmF;MACzF9C,OAAO,EAAE,KAAK;MACd+C,SAAS,EAAE,sBAAsB;MACjCC,MAAM,EAAE;IACV,CAAC;EAEL,CAAC,EACD;IACER,EAAE,EAAE,CAAC;IACLC,YAAY,EAAE,eAAe;IAC7BC,UAAU,EAAE,GAAG;IACfC,WAAW,EAAE,0BAA0B;IACvCC,WAAW,EAAE,CAAC;IACdC,QAAQ,EAAE,CACR;MACEL,EAAE,EAAE,CAAC;MACLM,IAAI,EAAE,0BAA0B;MAChC9C,OAAO,EAAE,KAAK;MACd+C,SAAS,EAAE,sBAAsB;MACjCC,MAAM,EAAE;IACV,CAAC;EAEL,CAAC,EACD;IACER,EAAE,EAAE,CAAC;IACLC,YAAY,EAAE,aAAa;IAC3BC,UAAU,EAAE,GAAG;IACfC,WAAW,EAAE,0BAA0B;IACvCC,WAAW,EAAE,CAAC;IACdC,QAAQ,EAAE,CACR;MACEL,EAAE,EAAE,CAAC;MACLM,IAAI,EAAE,iEAAiE;MACvE9C,OAAO,EAAE,KAAK;MACd+C,SAAS,EAAE,sBAAsB;MACjCC,MAAM,EAAE;IACV,CAAC;EAEL,CAAC,CACF,CAAC;EAEF,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAI,CAACZ,OAAO,CAACa,IAAI,CAAC,CAAC,IAAI,CAACf,UAAU,EAAE;IAEpC,MAAMgB,UAAU,GAAG;MACjBX,EAAE,EAAEY,IAAI,CAACC,GAAG,CAAC,CAAC;MACdP,IAAI,EAAET,OAAO;MACbrC,OAAO,EAAE,IAAI;MACb+C,SAAS,EAAE,IAAIK,IAAI,CAAC,CAAC,CAACE,WAAW,CAAC,CAAC;MACnCN,MAAM,EAAE;IACV,CAAC;;IAED;IACAtE,KAAK,CAAC6E,OAAO,CAAC,eAAe,CAAC;IAC9BjB,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,MAAMkB,cAAc,GAAIC,CAAC,IAAK;IAC5B,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;MACrBT,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC;EAED,MAAMU,UAAU,GAAIZ,SAAS,IAAK;IAChC,OAAO,IAAIK,IAAI,CAACL,SAAS,CAAC,CAACa,kBAAkB,CAAC,OAAO,EAAE;MACrDC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC;EAED,oBACEjF,OAAA,CAACG,iBAAiB;IAAA+E,QAAA,EACf,CAAC5B,UAAU,gBACVtD,OAAA,CAAAE,SAAA;MAAAgF,QAAA,gBACElF,OAAA;QAAImF,KAAK,EAAE;UAAEC,KAAK,EAAE,SAAS;UAAEC,YAAY,EAAE;QAAO,CAAE;QAAAH,QAAA,EAAC;MAAoB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChFzF,OAAA,CAACoC,WAAW;QAAA8C,QAAA,EACTxB,KAAK,CAACgC,GAAG,CAACC,IAAI,iBACb3F,OAAA,CAACsC,QAAQ;UAAesD,OAAO,EAAEA,CAAA,KAAMrC,aAAa,CAACoC,IAAI,CAAE;UAAAT,QAAA,gBACzDlF,OAAA,CAACwC,cAAc;YAAA0C,QAAA,gBACblF,OAAA,CAAC0C,YAAY;cAAAwC,QAAA,EAAES,IAAI,CAAC/B;YAAY;cAAA0B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAe,CAAC,EAC/CE,IAAI,CAAC5B,WAAW,GAAG,CAAC,iBACnB/D,OAAA,CAAC6C,WAAW;cAAAqC,QAAA,EAAES,IAAI,CAAC5B;YAAW;cAAAuB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAc,CAC7C;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACa,CAAC,eACjBzF,OAAA,CAAC+C,WAAW;YAAAmC,QAAA,EAAES,IAAI,CAAC7B;UAAW;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAc,CAAC;QAAA,GAPhCE,IAAI,CAAChC,EAAE;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQZ,CACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACS,CAAC,EAEb/B,KAAK,CAACmC,MAAM,KAAK,CAAC,iBACjB7F,OAAA,CAACkD,UAAU;QAAAgC,QAAA,gBACTlF,OAAA;UAAAkF,QAAA,EAAI;QAAuB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChCzF,OAAA;UAAAkF,QAAA,EAAG;QAA+C;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CACb;IAAA,eACD,CAAC,gBAEHzF,OAAA,CAAAE,SAAA;MAAAgF,QAAA,gBACElF,OAAA,CAACM,UAAU;QAAA4E,QAAA,gBACTlF,OAAA,CAACQ,SAAS;UAAA0E,QAAA,GAAC,YAAU,EAAC5B,UAAU,CAACM,YAAY;QAAA;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAC1DzF,OAAA,CAACW,YAAY;UAAAuE,QAAA,gBACXlF,OAAA,CAACa,SAAS;YAAAyE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,UAEf;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAEbzF,OAAA,CAACe,QAAQ;QAAAmE,QAAA,EACN5B,UAAU,CAACU,QAAQ,CAAC0B,GAAG,CAACI,GAAG,iBAC1B9F,OAAA,CAACiB,OAAO;UAAcE,OAAO,EAAE2E,GAAG,CAAC3E,OAAQ;UAAA+D,QAAA,GACxC,CAACY,GAAG,CAAC3E,OAAO,iBAAInB,OAAA,CAAC0B,aAAa;YAAAwD,QAAA,EAAEY,GAAG,CAAC3B;UAAM;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAgB,CAAC,eAC5DzF,OAAA,CAACqB,aAAa;YAACF,OAAO,EAAE2E,GAAG,CAAC3E,OAAQ;YAAA+D,QAAA,EACjCY,GAAG,CAAC7B;UAAI;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC,eAChBzF,OAAA,CAACuB,WAAW;YAAA2D,QAAA,EAAEJ,UAAU,CAACgB,GAAG,CAAC5B,SAAS;UAAC;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAc,CAAC;QAAA,GAL1CK,GAAG,CAACnC,EAAE;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMX,CACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CAAC,eAEXzF,OAAA,CAAC4B,SAAS;QAAAsD,QAAA,gBACRlF,OAAA,CAAC8B,KAAK;UACJiE,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,sBAAsB;UAClCC,KAAK,EAAEzC,OAAQ;UACf0C,QAAQ,EAAGtB,CAAC,IAAKnB,UAAU,CAACmB,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE;UAC5CG,UAAU,EAAEzB;QAAe;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC,eACFzF,OAAA,CAACiC,UAAU;UAAC2D,OAAO,EAAExB,iBAAkB;UAACiC,QAAQ,EAAE,CAAC7C,OAAO,CAACa,IAAI,CAAC,CAAE;UAAAa,QAAA,EAAC;QAEnE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAEZzF,OAAA;QAAKmF,KAAK,EAAE;UAAEmB,SAAS,EAAE,MAAM;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAArB,QAAA,eACrDlF,OAAA;UACE4F,OAAO,EAAEA,CAAA,KAAMrC,aAAa,CAAC,IAAI,CAAE;UACnC4B,KAAK,EAAE;YACLqB,UAAU,EAAE,SAAS;YACrBpB,KAAK,EAAE,OAAO;YACdqB,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE,UAAU;YACnBC,YAAY,EAAE,KAAK;YACnBC,MAAM,EAAE;UACV,CAAE;UAAA1B,QAAA,EACH;QAED;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA,eACN;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAExB,CAAC;AAACpC,EAAA,CAjLID,QAAQ;AAAAyD,IAAA,GAARzD,QAAQ;AAmLd,eAAeA,QAAQ;AAAC,IAAA/C,EAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAI,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAG,IAAA,EAAAG,IAAA,EAAAE,IAAA,EAAAE,IAAA,EAAAE,IAAA,EAAAG,IAAA,EAAAE,IAAA,EAAAG,IAAA,EAAAE,IAAA,EAAA0D,IAAA;AAAAC,YAAA,CAAAzG,EAAA;AAAAyG,YAAA,CAAAvG,GAAA;AAAAuG,YAAA,CAAApG,GAAA;AAAAoG,YAAA,CAAAlG,GAAA;AAAAkG,YAAA,CAAAhG,GAAA;AAAAgG,YAAA,CAAA9F,GAAA;AAAA8F,YAAA,CAAA1F,GAAA;AAAA0F,YAAA,CAAAxF,GAAA;AAAAwF,YAAA,CAAArF,GAAA;AAAAqF,YAAA,CAAAnF,GAAA;AAAAmF,YAAA,CAAAjF,GAAA;AAAAiF,YAAA,CAAA9E,IAAA;AAAA8E,YAAA,CAAA3E,IAAA;AAAA2E,YAAA,CAAAzE,IAAA;AAAAyE,YAAA,CAAAvE,IAAA;AAAAuE,YAAA,CAAArE,IAAA;AAAAqE,YAAA,CAAAlE,IAAA;AAAAkE,YAAA,CAAAhE,IAAA;AAAAgE,YAAA,CAAA7D,IAAA;AAAA6D,YAAA,CAAA3D,IAAA;AAAA2D,YAAA,CAAAD,IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}